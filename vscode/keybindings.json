// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+cmd+r",
    "command": "workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "alt+w",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },
  {
    "key": "alt+p",
    "command": "extension.createProjectFromTemplate"
  },
  //Disable / Enable vim.
  {
    "key": "ctrl+alt+v",
    "command": "toggleVim"
  },
  // Switch focus to explorer
  {
    "key": "cmd+f",
    "command": "revealInExplorer"
  },

  // Toggle focus to editor.
  {
    "key": "ctrl+1",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },

  // Tab to the previous/next editor.
  {
    "key": "cmd+k",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.previousEditor"
  },
  // Move active editor tab left or right (useful for full-stack web dev).
  {
    "key": "cmd+ctrl+j",
    "command": "moveActiveEditor",
    "args": {
      "to": "left"
    }
  },
  {
    "key": "cmd+ctrl+k",
    "command": "moveActiveEditor",
    "args": {
      "to": "right"
    }
  },
  // Traverse VSCode IntelliSense suggestions with vim keybindings.
  {
    "key": "cmd+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // Traverse VSCode quick open options with vim keybindings.
  {
    "key": "cmd+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "cmd+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  // VSCode terminal + Vim keybindings.
  // Toggle focus to terminal.
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.focus"
  },
  //Create new terminal window
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.newInActiveWorkspace"
  },
  // Close or kill terminal window(s).
  {
    "key": "cmd+e",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  //Maximize terminal panel.
  {
    "key": "cmd+ctrl+enter",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  //Split terminal to side.
  {
    "key": "cmd+d",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  // Switch focus between split terminals.
  {
    "key": "cmd+k",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  // Switch focus between tabbed terminals.
  {
    "key": "cmd+k",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalProcessSupported"
  },

  {
    "key": "shift+escape",
    "command": "workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
  },

  //Disable default Keybindings.
  {
    "key": "alt+cmd+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+down",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+up",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "escape",
    "command": "-workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+escape",
    "command": "-workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-workbench.action.terminal.focusTabs",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  }
]
